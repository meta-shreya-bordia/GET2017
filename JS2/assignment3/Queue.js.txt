//make this class as singleton class
var queue = new LinkedQueue();

(function(){
  document.getElementById("Enqueue").addEventListener("click", function(){performOperation(this);}, false);
  document.getElementById("Dequeue").addEventListener("click", function(){performOperation(this);}, false);
})();

function performOperation(button_id){
  var element = document.getElementById("element_value").value;

  //call appropriate method
  switch(button_id.id){
    case "Enqueue":
      stack.enqueue(element);
      break;
    case "Dequeue":
      stack.dequeue();
      break;
  }

  var stack_elements = document.body.appendChild(document.createElement("p"));
  stack_elements.id = "nodes_in_queue";
  stack_elements.appendChild(document.createTextNode( JSON.stringify(stack) ) );
}

function Node(data){
  this.data = data;
  this.next = null;
}

function LinkedQueue(){
  this.head = null;
  this.rear = null;
}

LinkedQueue.prototype.isEmpty = function(){
    if(!this.head !this.tail && this.head == this.rear){
    return true;
    }
    return false;
}

var element_value;

/**@method  enqueue(data)
push element as a node onto stack
update stack pointer
and update the previous node pointer of new top
*/
LinkedQueue.prototype.enqueue = function(element_value){
  try{
    if(!element_value){
      throw new Error("Invalid element value");
    }
  }catch(user_error){
    alert(user_error);
    return;
  }

  //inserting element to start of queue
  if(isEmpty()){
    var node = new Node(element_value);
    node.next = this.head;
    this.head = node;
    this.rear = node;
  }
}

/**@method  dequeue()
remove the top of the stack from the linked list
*/
LinkedStack.prototype.pop = function(){
  // if stack is empty, no element can be retrieved
  if(this.isEmpty()){
    return;
  }

  //dereference the top element to remove from stack
  var node = this.topOfStack;
  this.topOfStack = this.topOfStack.previous;

  //Show popped element
  /** To access all html tag textContent, use .innerHTML property. .value properties for containers like textbox and radio buttons*/
  var popped_element = document.body.appendChild(document.createElement("h2"));
  popped_element.id = "node_popped";
  popped_element.appendChild( document.createTextNode( node.data ) );

  return node;
}
